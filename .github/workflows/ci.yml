name: 'CI'

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
  workflow_dispatch:
    inputs:
      branch:
        description: 'Define branch name'
        required: true
  workflow_call:
    inputs:
      branch:
        description: 'Define branch name'
        required: true
        type: string

jobs:

  test_library_matrix:

    name: Test library

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [cdorunner-aipro-cicd]
        python: ['3.7', '3.8', '3.9']

    steps:
      - name: Checkout ${{ github.event.inputs.branch || inputs.branch }}
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.branch || inputs.branch }}
      
      - name: Set up Python ${{ github.event.inputs.python || inputs.python }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python }}

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '8'

      - name: Install dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-test.txt ]; then pip install -r requirements-test.txt; fi

      - name: Run tests and collect coverage
        shell: bash
        run: |
          chmod +x ./ci/run_tests.sh
          ./ci/run_tests.sh

  test_doc_ci:

    name: Test documentation

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [cdorunner-aipro-cicd]
        python: ['3.7', '3.8', '3.9']

    steps:
      - name: Checkout ${{ github.event.inputs.branch || inputs.branch }}
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.branch || inputs.branch }}

      - name: Set up Python ${{ github.event.inputs.python || inputs.python }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python }}

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '8'

      - name: Install dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-doc.txt ]; then pip install -r requirements-doc.txt; fi

      - name: Run tests and collect coverage
        shell: bash
        run: |
          mkdir -p ./docs/build/log
          cd docs
          sphinx-apidoc -o ./source ../xaiographs
          sphinx-build -c ./source ./source ../xaiographs | tee ./build/log/output.txt
          if [ $(cat ./build/log/output.txt | grep -c "\*\*\*Test Failed\*\*\*") -gt 0 ]; then
            echo "Documentation Test Failed.";
            exit 1;
          fi

  clean_environment:

      name: "Clean environment"

      if: ${{ always() }}

      needs: [ test_library_matrix, test_doc_ci ]

      runs-on: cdorunner-aipro-cicd

      steps:
        - name: Clean up workspace
          run: |
            rm -rf "${{ github.workspace }}"
#            rm -r /home/$USER/*
